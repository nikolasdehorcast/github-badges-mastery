# Teste das corre√ß√µes do MASTER-BADGE-AUTOMATION.ps1
Write-Host "üß™ TESTANDO CORRE√á√ïES DO SISTEMA" -ForegroundColor Cyan
Write-Host "=================================" -ForegroundColor Cyan

# 1. Testar configura√ß√£o Git
Write-Host ""
Write-Host "1. Testando configura√ß√£o Git..." -ForegroundColor Yellow
$gitUser = git config user.name 2>$null
$gitEmail = git config user.email 2>$null

if (-not $gitUser -or -not $gitEmail) {
    Write-Host "‚öôÔ∏è Configurando Git..." -ForegroundColor Yellow
    git config user.name "nikolasdehorcast"
    git config user.email "nikolasdehorcast@users.noreply.github.com"
    Write-Host "‚úÖ Git configurado!" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Git j√° configurado: $gitUser <$gitEmail>" -ForegroundColor Green
}

# 2. Testar GitHub CLI
Write-Host ""
Write-Host "2. Testando GitHub CLI..." -ForegroundColor Yellow
$ghPath = "C:\Program Files\GitHub CLI\gh.exe"
if (Test-Path $ghPath) {
    Write-Host "‚úÖ GitHub CLI encontrado: $ghPath" -ForegroundColor Green
    
    # Testar comando de autentica√ß√£o
    $authStatus = & $ghPath auth status 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ GitHub CLI autenticado" -ForegroundColor Green
    } else {
        Write-Host "‚ùå GitHub CLI n√£o autenticado" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå GitHub CLI n√£o encontrado" -ForegroundColor Red
}

# 3. Verificar status do reposit√≥rio
Write-Host ""
Write-Host "3. Verificando reposit√≥rio..." -ForegroundColor Yellow
$repoStatus = git status --porcelain 2>$null
if ($repoStatus) {
    Write-Host "‚ö†Ô∏è H√° altera√ß√µes n√£o commitadas:" -ForegroundColor Yellow
    Write-Host $repoStatus -ForegroundColor Gray
} else {
    Write-Host "‚úÖ Reposit√≥rio limpo" -ForegroundColor Green
}

Write-Host ""
Write-Host "üéØ TESTE CONCLU√çDO!" -ForegroundColor Green
Write-Host "Agora execute: .\launch-badges.bat" -ForegroundColor Cyan